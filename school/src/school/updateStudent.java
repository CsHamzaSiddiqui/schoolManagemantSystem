/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package school;

import DAOs.studentDAO;
import entities.student;
import java.sql.Date;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import utils.browseImage;
import utils.imageConversion;
import utils.popups;

/**
 *
 * @author hp
 */
public class updateStudent extends javax.swing.JPanel {
    studentDAO dao=new studentDAO();
    imageConversion ic = new imageConversion();
    static student staticStd=new student();

    /**
     * Creates new form updateStudent
     */
    public updateStudent() {
        initComponents();
    }

    public void resetValues(String mode){
        id.setText("");
        name.setText("");
        className.setText("");
        bform.setText("");
        address.setText("");
        roll.setText("");
        cast.setText("");
        fatherCNIC.setText("");
        fatherName.setText("");
        fatherPh.setText("");
        religion.setText("");
        motherName.setText("");
        motherCNIC.setText("");
        path.setText("");
        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imageicon.png"))); 
        if(mode.equalsIgnoreCase("Delete Student")){
            className.setEditable(false);
            bform.setEditable(false);
            address.setEditable(false);
            roll.setEditable(false);
            cast.setEditable(false);
            fatherCNIC.setEditable(false);
            fatherName.setEditable(false);
            fatherPh.setEditable(false);
            motherName.setEditable(false);
            motherCNIC.setEditable(false);
            admission.setEnabled(false);
            delete.setVisible(true);
            update.setVisible(false);
            brows.setVisible(false);
        }else if(mode.equalsIgnoreCase("Update Student")){
            className.setEditable(true);
            bform.setEditable(true);
            address.setEditable(true);
            roll.setEditable(true);
            cast.setEditable(true);
            fatherCNIC.setEditable(true);
            fatherName.setEditable(true);
            fatherPh.setEditable(true);
            motherName.setEditable(true);
            motherCNIC.setEditable(true);
            admission.setEnabled(true);
            delete.setVisible(false);
            update.setVisible(true);
            brows.setVisible(true);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addstd = new javax.swing.JPanel();
        bform = new javax.swing.JTextField();
        namePopup = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        names = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        path = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        brows = new javax.swing.JButton();
        update = new javax.swing.JButton();
        admission = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        roll = new javax.swing.JTextField();
        image = new javax.swing.JLabel();
        className = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        fatherName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        fatherCNIC = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        motherName = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        motherCNIC = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        religion = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        cast = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        fatherPh = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setLayout(null);

        addstd.setLayout(null);

        bform.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        bform.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bformKeyPressed(evt);
            }
        });
        addstd.add(bform);
        bform.setBounds(270, 200, 270, 34);

        namePopup.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                namePopupFocusLost(evt);
            }
        });

        names.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                namesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(names);

        javax.swing.GroupLayout namePopupLayout = new javax.swing.GroupLayout(namePopup);
        namePopup.setLayout(namePopupLayout);
        namePopupLayout.setHorizontalGroup(
            namePopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        namePopupLayout.setVerticalGroup(
            namePopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(namePopupLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        addstd.add(namePopup);
        namePopup.setBounds(270, 70, 270, 110);
        namePopup.setVisible(false);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("B.Form No");
        addstd.add(jLabel3);
        jLabel3.setBounds(160, 200, 120, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Name");
        addstd.add(jLabel4);
        jLabel4.setBounds(160, 40, 120, 30);

        name.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameKeyReleased(evt);
            }
        });
        addstd.add(name);
        name.setBounds(270, 40, 270, 34);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Sr. NO");
        addstd.add(jLabel5);
        jLabel5.setBounds(160, 100, 120, 30);

        id.setEditable(false);
        id.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addstd.add(id);
        id.setBounds(270, 100, 270, 34);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Address");
        addstd.add(jLabel6);
        jLabel6.setBounds(160, 400, 120, 30);

        address.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });
        addstd.add(address);
        address.setBounds(270, 400, 680, 34);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Class Name");
        addstd.add(jLabel7);
        jLabel7.setBounds(160, 150, 120, 30);

        path.setEditable(false);
        path.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addstd.add(path);
        path.setBounds(1020, 350, 190, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Admission Date");
        addstd.add(jLabel8);
        jLabel8.setBounds(580, 100, 120, 30);

        brows.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        brows.setText("Browse");
        brows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsActionPerformed(evt);
            }
        });
        addstd.add(brows);
        brows.setBounds(1020, 390, 190, 30);

        update.setBackground(new java.awt.Color(102, 0, 255));
        update.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        update.setText("Update Student");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        addstd.add(update);
        update.setBounds(500, 460, 240, 40);

        admission.setDateFormatString("yyyy-MM-dd");
        addstd.add(admission);
        admission.setBounds(700, 100, 250, 30);
        admission.setDate(Date.valueOf(LocalDate.now()));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Roll No");
        addstd.add(jLabel9);
        jLabel9.setBounds(590, 150, 120, 30);

        roll.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addstd.add(roll);
        roll.setBounds(700, 150, 250, 34);

        image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imageicon.png"))); // NOI18N
        addstd.add(image);
        image.setBounds(1030, 200, 140, 130);

        className.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addstd.add(className);
        className.setBounds(270, 150, 270, 34);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Father's Name");
        addstd.add(jLabel11);
        jLabel11.setBounds(590, 200, 120, 30);

        fatherName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addstd.add(fatherName);
        fatherName.setBounds(700, 200, 250, 34);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Father's CNIC");
        addstd.add(jLabel12);
        jLabel12.setBounds(160, 250, 120, 30);

        fatherCNIC.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fatherCNIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fatherCNICKeyPressed(evt);
            }
        });
        addstd.add(fatherCNIC);
        fatherCNIC.setBounds(270, 250, 270, 34);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Mother's Name");
        addstd.add(jLabel13);
        jLabel13.setBounds(160, 300, 120, 30);

        motherName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addstd.add(motherName);
        motherName.setBounds(270, 300, 270, 34);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("Mother's CNIC");
        addstd.add(jLabel14);
        jLabel14.setBounds(590, 300, 120, 30);

        motherCNIC.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        motherCNIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                motherCNICKeyPressed(evt);
            }
        });
        addstd.add(motherCNIC);
        motherCNIC.setBounds(700, 300, 250, 34);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setText("Religion");
        addstd.add(jLabel15);
        jLabel15.setBounds(160, 350, 120, 30);

        religion.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addstd.add(religion);
        religion.setBounds(270, 350, 270, 34);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setText("Cast");
        addstd.add(jLabel16);
        jLabel16.setBounds(590, 350, 120, 30);

        cast.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addstd.add(cast);
        cast.setBounds(700, 350, 250, 34);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setText("Father's Ph.");
        addstd.add(jLabel17);
        jLabel17.setBounds(590, 250, 120, 30);

        fatherPh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fatherPh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fatherPhKeyPressed(evt);
            }
        });
        addstd.add(fatherPh);
        fatherPh.setBounds(700, 250, 250, 34);

        search.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        search.setText("Search Student");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        addstd.add(search);
        search.setBounds(590, 40, 220, 30);

        delete.setBackground(new java.awt.Color(204, 0, 0));
        delete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        delete.setText("Delete Student");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        addstd.add(delete);
        delete.setBounds(500, 460, 240, 40);

        add(addstd);
        addstd.setBounds(0, 0, 1280, 530);
    }// </editor-fold>//GEN-END:initComponents

    private void bformKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bformKeyPressed
        char c = evt.getKeyChar();
        if(Character.isDigit(c) || Character.isISOControl(c)){
            bform.setEditable(true);
        }else{
            bform.setEditable(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_bformKeyPressed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        imageConversion ic=new imageConversion();
        byte[] bytes=null;
        if(path.getText().isEmpty()){
            bytes = staticStd.getImage();
        }else{
            bytes = ic.fileToByte(path.getText());
        }
        student std=new student();
        std.setId(Integer.parseInt(id.getText()));
        std.setName(name.getText());
        std.setClassName(className.getText());
        std.setCNIC(bform.getText());
        std.setAddress(address.getText());
        std.setAdmissionDate(admission.getDate());
        std.setImage(bytes);
        std.setDeleted(false);
        std.setRollNo(roll.getText());
        std.setCast(cast.getText());
        std.setFatherName(fatherName.getText());
        std.setFatherCNIC(fatherCNIC.getText());
        std.setFatherPh(fatherPh.getText());
        std.setReligion(religion.getText());
        std.setMotherName(motherName.getText());
        std.setMotherCNIC(motherCNIC.getText());
        dao.updateStudent(std);
        JOptionPane.showMessageDialog(null, "Student Updated Successfully...");
        resetValues("Update student");
        // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void fatherCNICKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fatherCNICKeyPressed
        char c = evt.getKeyChar();
        if(Character.isDigit(c) || Character.isISOControl(c)){
            fatherCNIC.setEditable(true);
        }else{
            fatherCNIC.setEditable(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_fatherCNICKeyPressed

    private void motherCNICKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_motherCNICKeyPressed
        char c = evt.getKeyChar();
        if(Character.isDigit(c) || Character.isISOControl(c)){
            motherCNIC.setEditable(true);
        }else{
            motherCNIC.setEditable(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_motherCNICKeyPressed

    private void fatherPhKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fatherPhKeyPressed
        char c = evt.getKeyChar();
        if(Character.isDigit(c) || Character.isISOControl(c)){
            fatherPh.setEditable(true);
        }else{
            fatherPh.setEditable(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_fatherPhKeyPressed

    private void browsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsActionPerformed
        browseImage browse = new browseImage();
        browse.brows(image, path);
        // TODO add your handling code here:
    }//GEN-LAST:event_browsActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        dao.deleteStudent(Integer.parseInt(id.getText()));
        JOptionPane.showMessageDialog(null, "Student deleted successfully...");
        resetValues("Delete Student");
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        staticStd = dao.getStudentByName(name.getText());
        id.setText(String.valueOf(staticStd.getId()));
        name.setText(staticStd.getName());
        className.setText(staticStd.getClassName());
        bform.setText(staticStd.getCNIC());
        address.setText(staticStd.getAddress());
        roll.setText(staticStd.getRollNo());
        cast.setText(staticStd.getCast());
        fatherCNIC.setText(staticStd.getFatherCNIC());
        fatherName.setText(staticStd.getFatherName());
        fatherPh.setText(staticStd.getFatherPh());
        religion.setText(staticStd.getReligion());
        motherName.setText(staticStd.getMotherName());
        motherCNIC.setText(staticStd.getMotherCNIC());
        admission.setDate(staticStd.getAdmissionDate());
        ic.byteToImage(staticStd.getImage(), image);
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void namesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_namesMouseClicked
        namePopup.setVisible(false);
        name.setText(names.getSelectedValue());
        // TODO add your handling code here:
    }//GEN-LAST:event_namesMouseClicked

    private void nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyReleased
        popups pop=new popups();
        pop.setStudentNamePopup(name.getText(), names, namePopup);
        // TODO add your handling code here:
    }//GEN-LAST:event_nameKeyReleased

    private void namePopupFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_namePopupFocusLost
        namePopup.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_namePopupFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JPanel addstd;
    private com.toedter.calendar.JDateChooser admission;
    private javax.swing.JTextField bform;
    private javax.swing.JButton brows;
    private javax.swing.JTextField cast;
    private javax.swing.JTextField className;
    private javax.swing.JButton delete;
    private javax.swing.JTextField fatherCNIC;
    private javax.swing.JTextField fatherName;
    private javax.swing.JTextField fatherPh;
    private javax.swing.JTextField id;
    public javax.swing.JLabel image;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField motherCNIC;
    private javax.swing.JTextField motherName;
    private javax.swing.JTextField name;
    private javax.swing.JPanel namePopup;
    private javax.swing.JList<String> names;
    private javax.swing.JTextField path;
    private javax.swing.JTextField religion;
    private javax.swing.JTextField roll;
    private javax.swing.JButton search;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}

